apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-package-build
  namespace: base-repo-ci
spec:
  params:
  - name: package-for-build
    description: Package name for build
    type: string
  - name: http_proxy
    description: http_proxy for container and mock
    type: string
  - name: https_proxy
    description: https_proxy for container and mock
    type: string
  - name: no_proxy
    description: no_proxy for container and mock
    type: string
  - name: registry
    description: container registry prefix
    type: string
  resources:
    inputs:
    - name: source
      type: git
  workspaces:
    - name: output
  steps:
  - name: pre-build-check
    image: alpine:3.11
    env:
      - name: "http_proxy"
        value: $(params.http_proxy)
      - name: "https_proxy"
        value: $(params.https_proxy)
      - name: "no_proxy"
        value: $(params.no_proxy)
    script: |
      #! /bin/sh
      echo "=> Build Package  : $(params.package-for-build) ..."
      echo "   http_proxy     : $(params.http_proxy)"
      echo "   https_proxy    : $(params.https_proxy)"
      echo "   no_proxy       : $(params.no_proxy)"
      echo "   registry       : $(params.registry)"
      echo "   output path    : $(workspaces.output.path)"
      echo ""
      echo "   Source Path: $(inputs.resources.source.path)"
      echo "   Git URL    : $(inputs.resources.source.url)"
      echo "   Git Version: $(inputs.resources.source.revision)"
      echo ""
  - name: rpmbuild-in-container
    image: $(params.registry)/il-pkg-build
    env:
    - name: "PACKAGE"
      value: "$(params.package-for-build)"
    - name: "http_proxy"
      value: $(params.http_proxy)
    - name: "https_proxy"
      value: $(params.https_proxy)
    - name: "no_proxy"
      value: $(params.no_proxy)
    script: |
      #!/bin/bash
      cp /workspace/source/repo/* /repo -fr
      /pkg-build/launch-build.sh
    securityContext:
      runAsUser: 0
    volumeMounts:
    - name: build
      mountPath: /build
  - name: publish
    image: alpine:3.11
    script: |
      #! /bin/sh
      cp /build/$(params.package-for-build)/result/*.rpm $(workspaces.output.path)
      chmod 777 $(workspaces.output.path)
    volumeMounts:
    - name: build
      mountPath: /build
  volumes:
  - name: build
    emptyDir: {}
